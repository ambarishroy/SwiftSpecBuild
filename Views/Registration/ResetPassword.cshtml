@model SwiftSpecBuild.Models.Authentication.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-5" style="max-width: 500px;">
    <div class="card shadow-sm">
        <div class="card-body">
            <h3 class="text-center mb-4">Reset Your Password</h3>

            @using (Html.BeginForm("ResetPassword", "Registration", FormMethod.Post))
            {
                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.Code)
                    @Html.TextBoxFor(m => m.Code, new { @class = "form-control", placeholder = "Enter verification code" })
                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.NewPassword)
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "New password" })
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-4">
                    @Html.LabelFor(m => m.ConfirmPassword)
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm new password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-success">Reset Password</button>
                </div>
            }
        </div>
    </div>
</div>
